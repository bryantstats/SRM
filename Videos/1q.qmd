---
title: "Principal Component Analysis"
format: beamer
editor: visual
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```




<style>

.remark-slide-content {
  background-color: #FFFFFF;
  border-top: 80px solid #F9C389;
  font-size: 20px;
  font-weight: 300;
  line-height: 1.5;
  padding: 1em 2em 1em 2em
}

.inverse {
  background-color: #696767;
  border-top: 80px solid #696767;
  text-shadow: none;
  background-image: url(https://github.com/goodekat/presentations/blob/master/2019-isugg-gganimate-spooky/figures/spider.png?raw=true);
	background-position: 50% 75%;
  background-size: 150px;
}

.your-turn{
  background-color: #8C7E95;
  border-top: 80px solid #F9C389;
  text-shadow: none;
  background-image: url(https://github.com/goodekat/presentations/blob/master/2019-isugg-gganimate-spooky/figures/spider.png?raw=true);
	background-position: 95% 90%;
  background-size: 75px;
}

.title-slide {
  background-color: #F9C389;
  border-top: 80px solid #F9C389;
  background-image: none;
}

.title-slide > h1  {
  color: #111111;
  font-size: 40px;
  text-shadow: none;
  font-weight: 400;
  text-align: left;
  margin-left: 15px;
  padding-top: 80px;
}
.title-slide > h2  {
  margin-top: -25px;
  padding-bottom: -20px;
  color: #111111;
  text-shadow: none;
  font-weight: 300;
  font-size: 35px;
  text-align: left;
  margin-left: 15px;
}
.title-slide > h3  {
  color: #111111;
  text-shadow: none;
  font-weight: 300;
  font-size: 25px;
  text-align: left;
  margin-left: 15px;
  margin-bottom: -30px;
}

</style>

```{css, echo=FALSE}
.left-code {
  color: #777;
  width: 50%;
  height: 92%;
  float: left;
}
.right-plot {
  width: 49%;
  float: right;
  padding-left: 1%;
}
```


# Simple Linear Model

- Given the data

| $x_1$ | $x_2$| $y$ |
|--|--|--|
| 1   | 0   | -2   |
| 2   | 1   | 0  |
| 3   | -2   | -1   |
| 4   | 3   | 1   |


# Scatter plot

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)
library(ggplot2)

x = c(1,2,3,4)
y = c(1.1, 1.8, 2.7, 4.5)

d1 = as_tibble(data.frame(
     x = x, 
     y = y))

# functions
plot_line <- function(x1, y1, x2, y2)
  
{
  slope = (y2-y1)/(x2-x1)
  intercept =  y1 - slope*x1
  f = function(xx){return(xx*slope + intercept)}
  
  pp = ggplot(data = d1, aes(x = x, y=y))+
  geom_point()+
    geom_segment(aes(x = 0.5, y = f(0.5), xend = 4.5, yend = f(4.5)))+
    labs(title = paste("SSE:"),
         subtitle = paste0("y = ", round(slope,2), "x+", round(intercept,2)))+
    xlim(0,5)+
    ylim(0,5)+
    coord_fixed()

  print(pp)

}

plot_line2 <- function(x1, y1, x2, y2)
{
slope = (y2-y1)/(x2-x1)
intercept =  y1 - slope*x1

f = function(xx){return(xx*slope + intercept)}

squared_errors = sum((y-f(x))^2)

pp = ggplot(data = d1, aes(x = x, y=y))+
  geom_point()+
  geom_segment(aes(x = 0.5, y = f(0.5), xend = 4.5, yend = f(4.5)))+
  geom_segment(aes(x = x[1], y = y[1], xend = x[1], yend = f(x[1])), color = 'red')+
  geom_segment(aes(x = x[2], y = y[2], xend = x[2], yend = f(x[2])), color = 'red')+
  geom_segment(aes(x = x[3], y = y[3], xend = x[3], yend = f(x[3])), color = 'red')+
  geom_segment(aes(x = x[4], y = y[4], xend = x[4], yend = f(x[4])), color = 'red')+
  geom_text(x = x[1], y = .5*(y[1]+f(y[1])), label = paste(round(abs(y[1]-f(x[1])),2)))+
  geom_text(x = x[2], y = .5*(y[2]+f(y[2])), label = paste(round(abs(y[2]-f(x[2])),2)))+
  geom_text(x = x[3], y = .5*(y[3]+f(y[3])), label = paste(round(abs(y[3]-f(x[3])),2)))+
  geom_text(x = x[4], y = .5*(y[4]+f(y[4])), label = paste(round(abs(y[4]-f(x[4])),2)))+
  labs(title = paste("SSE:", round(squared_errors,2)),
         subtitle = paste0("y = ", round(slope,2), "x+", round(intercept,2)))+
  xlim(0,5)+
  ylim(0,5)+
  coord_fixed()

print(pp)

}

plot_line3 <- function()
  
{
  l = lm(y~x) 
slope = l$coefficients[2]
intercept =  l$coefficients[1]
f = function(xx){return(xx*slope + intercept)}
squared_errors = sum((y-f(x))^2)
pp = ggplot(data = d1, aes(x = x, y=y))+
  geom_point()+
  geom_segment(aes(x = 0.5, y = f(0.5), xend = 4.5, yend = f(4.5)))+
  geom_segment(aes(x = x[1], y = y[1], xend = x[1], yend = f(x[1])), color = 'red')+
  geom_segment(aes(x = x[2], y = y[2], xend = x[2], yend = f(x[2])), color = 'red')+
  geom_segment(aes(x = x[3], y = y[3], xend = x[3], yend = f(x[3])), color = 'red')+
  geom_segment(aes(x = x[4], y = y[4], xend = x[4], yend = f(x[4])), color = 'red')+
  geom_text(x = x[1], y = .5*(y[1]+f(y[1])), label = paste(round(abs(y[1]-f(x[1])),2)))+
  geom_text(x = x[2], y = .5*(y[2]+f(y[2])), label = paste(round(abs(y[2]-f(x[2])),2)))+
  geom_text(x = x[3], y = .5*(y[3]+f(y[3])), label = paste(round(abs(y[3]-f(x[3])),2)))+
  geom_text(x = x[4], y = .5*(y[4]+f(y[4])), label = paste(round(abs(y[4]-f(x[4])),2)))+
  labs(title = paste("SSE:", round(squared_errors,2)),
         subtitle = paste0("y = ", round(slope,2), "x+", round(intercept,2)))+
  xlim(0,5)+
  ylim(0,5)+
  coord_fixed()

print(pp)

}

```


```{r}
# ploting the point
ggplot(data = d1, aes(x = x, y=y))+
  geom_point()+
    xlim(0,5)+
    ylim(0,5)+
    coord_fixed()
```





# Which line is closer to the points?

```{r}
x1 = 0
y1 = 1
x2 = 5
y2 = 3

a1 = 0.5
b1 = 0
a2 = 5
b2 = 4

ggplot(data = d1, aes(x = x, y=y))+
  geom_point()+
  geom_segment(aes(x = a1, y = b1, xend = a2, yend = b2))+
  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, color = 'red'))+
  xlim(0,5)+
  ylim(0,5)+
  coord_fixed()+
  theme(legend.position="none")

```


# Line 1

```{r}
plot_line(x1, y1, x2, y2)
```


# Line 1

```{r}
plot_line2(x1, y1, x2, y2)
```


# Line 2

```{r}
plot_line(a1, b1, a2, b2)
```


# Line 2

```{r}
plot_line2(a1, b1, a2, b2)
```



# What is the closest line to the points?

- The least squared methods give us the formula for the `closest` line:

- $y = \hat{\beta_1}x+\hat{\beta_0}$

- $\hat{\beta_{1}} = \frac{\sum_{i=1}^{n}{(x_i-\bar{x})(y_i-\bar{y})}}{\sum_{i=1}^{n}(x_i-\bar{x})^2} = \frac{S_{xy}}{S_{xx}}$

- $\hat{\beta_{0}} = \bar{y} - \hat{\beta_{1}}\bar{x}$

- This line is also called the best fitted line


# Calculation

| $x$ | $y$ |
|--|--|
| 1   | 1.1   |
| 2   | 1.8  |
| 3   | 2.7  |
| 4   | 4.5   | 



# Calculation

   | $x$ |  $y$  | $x -\bar{x}$     |  $y-\bar{y}$      |  $(x -\bar{x})(y-\bar{y})$      | $(x -\bar{x})^2$      |
|---|---|---|---|---|---|
   | 1 | 1.1 |  |  |  |  |
   | 2 | 1.8 | |  |  |  |
   | 3 | 2.7 | |  |  |  |
   | 4 | 4.5 | |  |  |  |
|   | |  |  |  |



# Calculation

| $x$ |  $y$  | $x -\bar{x}$     |  $y-\bar{y}$      |  $(x -\bar{x})(y-\bar{y})$      | $(x -\bar{x})^2$      |
|---|---|---|---|---|---|
   | 1 | 1.1 |  |  |  |  |
   | 2 | 1.8 | |  |  |  |
   | 3 | 2.7 | |  |  |  |
   | 4 | 4.5 | |  |  |  |
  |   | |  |  |  |

- $\bar{x} = \frac{1+2+3+4}{4} =  2.5$
- $\bar{y} = \frac{1.1+1.8+2.4+4.5}{4} = 1.11$



# Calculation

  | $x$ |  $y$  | $x -\bar{x}$     |  $y-\bar{y}$      |  $(x -\bar{x})(y-\bar{y})$      | $(x -\bar{x})^2$      |
|---|---|---|---|---|---|
   | 1 | 1.1 | -1.5 | -1.425 | 2.1375 | 2.25 |
   | 2 | 1.8 | -0.5 | -0.725 | 0.3625 | 0.25 |
   | 3 | 2.7 |  0.5 |  0.175 | 0.0875 | 0.25 |
   | 4 | 4.5 |  1.5 |  1.975 | 2.9625 | 2.25 |
  |   |     |      |        |  5.55  |   5  |

- $\hat{\beta_1} = \frac{5.55}{5} = 1.11$

- $\hat{\beta_0} = \bar{y} - \hat{\beta_{1}}\bar{x} = -0.25$


# Graph

```{r}
plot_line3()
```


# Some other lines

```{r}
plot_line2(0, 0, 5, 5)
```


# Some other lines

```{r}
plot_line2(0, 1, 5, 4)
```

# Some other lines

```{r}
plot_line2(0, 2, 5, 3)
```


# Some other lines

```{r}
plot_line2(0, 3, 5, 2)
```


# Sum Up

- The best fitted line or the least squared line is the line the cloest to the data point. 
