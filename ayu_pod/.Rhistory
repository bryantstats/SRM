install.packages('CASdatasets')
version
install.packages("CASdatasets", repos = "http://cas.uqam.ca/pub/", type="source")
version
version
install.packages('CASdatasets')
install.packages("CASdatasets", repos = "http://dutangc.free.fr/pub/RRepos/", type="source")
install.packages("CASdatasets", repos = "http://dutangc.perso.math.cnrs.fr/RRepository/", type="source")
install.packages("CASdatasets", repos = "http://cas.uqam.ca/pub/R/", type="source")
install.packages("devtools")
devtools::install_github("dutangc/CASdatasets", subdir="pkg")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval = TRUE)
library(cluster)
library(factoextra)
library(tidyverse)
df <- USArrests
df <- na.omit(df)
df <- scale(df)
# Dissimilarity matrix
d <- dist(df, method = "euclidean")
# Hierarchical clustering using Complete Linkage
# Method could be single, average...
hi_clustering <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hi_clustering)
USArrests
fviz_nbclust(df, FUN = hcut, method = "wss")
# Cut tree into 4 groups
sub_grp <- cutree(hi_clustering, k = 3)
USArrests = USArrests %>%
mutate(cluster = sub_grp)
USArrests
?USArrests
?hclust
?fviz_nbclust
?get_dist
?kmeans
?fviz_cluster
?factoextra
?hclust
# Assign clusters to the observations
sub_grp <- cutree(hi_clustering, k = 3)
USArrests = USArrests %>%
mutate(cluster = sub_grp)
# Visualize the cluster
plot(hi_clustering, cex = 0.6)
rect.hclust(hi_clustering, k = 3, border = 2:5)
fviz_cluster(list(data = df, cluster = sub_grp))
?fviz_cluster
install.packages('factoextra')
install.packages("factoextra")
?rect.hclust
library(factoextra)
fviz_nbclust(df, FUN = hcut, method = "wss")
?fviz_cluster
sub_grp
library(cluster)
library(tidyverse)
library(factoextra)
df <- read.csv('Mall_Customers.csv', row.names = 1)
library(cluster)
library(tidyverse)
library(factoextra)
df <- read_csv('Mall_Customers.csv', row.names = 1)
library(cluster)
library(tidyverse)
library(factoextra)
df <- read_csv('Mall_Customers.csv', row.names = 1)
library(cluster)
library(tidyverse)
library(factoextra)
df <- read_csv('Mall_Customers.csv', row.names = 1)
library(cluster)
library(tidyverse)
library(factoextra)
df <- read.csv('Mall_Customers.csv', row.names = 1)
#scale each variable to have a mean of 0 and sd of 1
df <- as_tibble(scale(df))
# Dissimilarity matrix
d <- dist(df, method = "euclidean")
# Hierarchical clustering using Complete Linkage
# Method could be single, average...
hi_clustering <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hi_clustering)
fviz_nbclust(df, FUN = hcut, method = "wss")
sub_grp <- cutree(hi_clustering, k = 3)
df = df %>%
mutate(cluster = sub_grp)
plot(hi_clustering, cex = 0.6)
rect.hclust(hi_clustering, k = 3, border = 2:5)
fviz_cluster(list(data = df, cluster = sub_grp))
df <- read_csv('Mall_Customers.csv')
setwd("C:/Users/sonou/Dropbox/git/SRM/ayu_pod")
df <- read_csv('Mall_Customers.csv')
df
df <- read.csv('Mall_Customers.csv', row.names = 1)
df
df <- read_csv('Mall_Customers.csv')
df
df <- read.csv('Mall_Customers.csv', row.names = 1)
#scale each variable to have a mean of 0 and sd of 1
df <- as_tibble(scale(df))
df
df <- read_csv('Mall_Customers2.csv')
df
df <- read_csv('Mall_Customers2.csv')
df
df <- read_csv('Mall_Customers2.csv')
df
library(cluster)
library(tidyverse)
library(factoextra)
df <- read_csv('Mall_Customers2.csv')
#scale each variable to have a mean of 0 and sd of 1
df <- as_tibble(scale(df))
# Dissimilarity matrix
d <- dist(df, method = "euclidean")
# Hierarchical clustering using Complete Linkage
# Method could be single, average...
hi_clustering <- hclust(d, method = "complete" )
# Plot the obtained dendrogram
plot(hi_clustering)
fviz_nbclust(df, FUN = hcut, method = "wss")
sub_grp <- cutree(hi_clustering, k = 3)
df = df %>%
mutate(cluster = sub_grp)
plot(hi_clustering, cex = 0.6)
rect.hclust(hi_clustering, k = 3, border = 2:5)
fviz_cluster(list(data = df, cluster = sub_grp))
?kmeans
library(tidyverse)  # data manipulation
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df <- na.omit(df)
df <- scale(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2)
fviz_cluster(k2, data = df)
df %>%
as_tibble() %>%
mutate(cluster = k2$cluster,
state = row.names(USArrests)) %>%
ggplot(aes(UrbanPop, Murder, color = factor(cluster), label = state)) +
geom_text()
k3 <- kmeans(df, centers = 3)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df) + ggtitle("k = 4")
library(tidyverse)  # data manipulation
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df <- na.omit(df)
df <- scale(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2)
fviz_cluster(k2, data = df)
df %>%
as_tibble() %>%
mutate(cluster = k2$cluster,
state = row.names(USArrests)) %>%
ggplot(aes(UrbanPop, Murder, color = factor(cluster), label = state)) +
geom_text()
k3 <- kmeans(df, centers = 3)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df) + ggtitle("k = 3")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
library(tidyverse)  # data manipulation
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df <- na.omit(df)
df <- scale(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2)
fviz_cluster(k2, data = df)
df %>%
as_tibble() %>%
mutate(cluster = k2$cluster,
state = row.names(USArrests)) %>%
ggplot(aes(UrbanPop, Murder, color = factor(cluster), label = state)) +
geom_text()
k3 <- kmeans(df, centers = 3)
library(tidyverse)  # data manipulation
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df <- na.omit(df)
df <- scale(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(df, centers = 2)
fviz_cluster(k2, data = df)
library(tidyverse)  # data manipulation
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df <- na.omit(df)
df <- scale(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k <- kmeans(df, centers = 3)
fviz_cluster(k, data = df)
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
final <- kmeans(df, 4, nstart = 25)
fviz_cluster(final, data = df)
library(tidyverse)  # data manipulation
library(factoextra) # clustering algorithms & visualization
df <- USArrests
df <- na.omit(df)
df <- scale(df)
set.seed(123)
fviz_nbclust(df, kmeans, method = "wss")
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k <- kmeans(df, centers = 4)
fviz_cluster(k, data = df)
final <- kmeans(df, 4)
fviz_cluster(final, data = df)
library(tidyverse)
df <- USArrests
# remove missing values
df <- na.omit(df)
# scale the data for clustering
df <- scale(df)
distance <- get_dist(df)
fviz_dist(distance, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k <- kmeans(df, centers = 4)
fviz_cluster(k, data = df)
k2 <- kmeans(df, centers = 2)
k3 <- kmeans(df, centers = 3)
k4 <- kmeans(df, centers = 4)
k5 <- kmeans(df, centers = 5)
# plots to compare
p1 <- fviz_cluster(k2, geom = "point", data = df) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df) + ggtitle("k = 5")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
